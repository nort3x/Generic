plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}


allprojects {
    group = 'com.example.gradle'
    version = '0.1.0'
}


javafx {
    version = "16"
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media', 'javafx.media', 'javafx.swing']
}
mainClassName = 'runner.MainUI'
apply plugin: 'java'
apply plugin: 'application'


repositories {
    google()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'libs'
    }
}




dependencies {

    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
    implementation 'com.jfoenix:jfoenix:9.0.10'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'uk.co.caprica:vlcj-javafx:1.0.2'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation project(':BackEnd')
}

//icons

dependencies {
    implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.2.0'
    implementation 'org.nanohttpd:nanohttpd:2.2.0'
}


// unit test
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation "org.testfx:testfx-core:4.0.16-alpha"
    testImplementation "org.testfx:testfx-junit5:4.0.16-alpha"
    implementation 'com.fazecast:jSerialComm:1.3.11'
}
test {
    useJUnitPlatform()
}
